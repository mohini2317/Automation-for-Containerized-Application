version: 0.2


phases:
  install:
    runtime-versions:
      docker: 19
    commands:
      - echo Installing kubectl...
      - curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin/kubectl
      - echo Installing aws-iam-authenticator...
      - curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/aws-iam-authenticator
      - chmod +x ./aws-iam-authenticator
      - mv ./aws-iam-authenticator /usr/local/bin

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - REPOSITORY_URI=096400694479.dkr.ecr.ap-south-1.amazonaws.com/ecr-eks-demo
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - aws sts get-caller-identity
      - echo Setting up Kubernetes context...
      - aws eks update-kubeconfig --name demo-cluster --region ap-south-1

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - cd application
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG  .
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing new image into Kubernetes deployment file...
      - sed -i "s|096400694479.dkr.ecr.ap-south-1.amazonaws.com/ecr-eks-demo:[^ ]*|$REPOSITORY_URI:$IMAGE_TAG|" deployment.yaml
      - cat deployment.yaml
      - echo Apply deployment to Kubernetes...
      - kubectl apply -f deployment.yaml
      #- kubectl apply -f service.yaml
      - echo Build completed on `date`

cache:
  paths:
    - '/root/.docker/**/*'
